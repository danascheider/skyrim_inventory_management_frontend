// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`GameEditForm > matches snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="_root_bc52a1"
      >
        <h3
          class="_header_bc52a1"
        >
          Update Game
        </h3>
        <form
          class="_form_bc52a1"
          data-testid="editGame32Form"
          style="--button-background-color: #00a323; --button-text-color: #fff; --button-hover-color: #00921f; --button-border-color: #00821c;"
        >
          <fieldset
            class="_fieldset_bc52a1"
          >
            <label
              class="_label_bc52a1"
              for="name"
            >
              Name
            </label>
            <input
              aria-label="Name"
              class="_input_bc52a1"
              data-testid="nameField"
              name="name"
              pattern="^\\\\s*[A-Za-z0-9 \\\\-',]*\\\\s*$"
              title="Name can contain only alphanumeric characters, spaces, commas, hyphens, and apostrophes"
              type="text"
              value="My Game 1"
            />
          </fieldset>
          <fieldset
            class="_fieldset_bc52a1"
          >
            <label
              class="_label_bc52a1"
              for="description"
            >
              Description
            </label>
            <input
              aria-label="Description"
              class="_input_bc52a1"
              data-testid="descriptionField"
              name="description"
              placeholder="Description"
              value="This is a game with a description"
            />
          </fieldset>
          <button
            class="_submit_bc52a1"
            data-testid="submitGameEditForm"
            type="submit"
          >
            Update
          </button>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="_root_bc52a1"
    >
      <h3
        class="_header_bc52a1"
      >
        Update Game
      </h3>
      <form
        class="_form_bc52a1"
        data-testid="editGame32Form"
        style="--button-background-color: #00a323; --button-text-color: #fff; --button-hover-color: #00921f; --button-border-color: #00821c;"
      >
        <fieldset
          class="_fieldset_bc52a1"
        >
          <label
            class="_label_bc52a1"
            for="name"
          >
            Name
          </label>
          <input
            aria-label="Name"
            class="_input_bc52a1"
            data-testid="nameField"
            name="name"
            pattern="^\\\\s*[A-Za-z0-9 \\\\-',]*\\\\s*$"
            title="Name can contain only alphanumeric characters, spaces, commas, hyphens, and apostrophes"
            type="text"
            value="My Game 1"
          />
        </fieldset>
        <fieldset
          class="_fieldset_bc52a1"
        >
          <label
            class="_label_bc52a1"
            for="description"
          >
            Description
          </label>
          <input
            aria-label="Description"
            class="_input_bc52a1"
            data-testid="descriptionField"
            name="description"
            placeholder="Description"
            value="This is a game with a description"
          />
        </fieldset>
        <button
          class="_submit_bc52a1"
          data-testid="submitGameEditForm"
          type="submit"
        >
          Update
        </button>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
