// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`GameForm > create form matches snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="_root_31bf4a"
      >
        <h3
          class="_header_31bf4a"
        >
          Create Game
        </h3>
        <form
          data-testid="gameForm"
          style="--button-background-color: #00a323; --button-text-color: #fff; --button-hover-color: #00921f; --button-border-color: #00821c;"
        >
          <fieldset
            class="_fieldset_31bf4a"
          >
            <label
              class="_label_31bf4a"
            >
              Name
              <input
                class="_input_31bf4a"
                name="name"
                pattern="^\\s*[A-Za-z0-9 \\-',]*\\s*$"
                placeholder="Name"
                title="Name can contain only alphanumeric characters, spaces, commas, hyphens, and apostrophes"
                type="text"
                value=""
              />
            </label>
          </fieldset>
          <fieldset
            class="_fieldset_31bf4a"
          >
            <label
              class="_label_31bf4a"
            >
              Description
              <input
                class="_input_31bf4a"
                name="description"
                placeholder="Description"
                value=""
              />
            </label>
          </fieldset>
          <button
            class="_submit_31bf4a"
            data-testid="gameFormSubmit"
            type="submit"
          >
            Create Game
          </button>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="_root_31bf4a"
    >
      <h3
        class="_header_31bf4a"
      >
        Create Game
      </h3>
      <form
        data-testid="gameForm"
        style="--button-background-color: #00a323; --button-text-color: #fff; --button-hover-color: #00921f; --button-border-color: #00821c;"
      >
        <fieldset
          class="_fieldset_31bf4a"
        >
          <label
            class="_label_31bf4a"
          >
            Name
            <input
              class="_input_31bf4a"
              name="name"
              pattern="^\\s*[A-Za-z0-9 \\-',]*\\s*$"
              placeholder="Name"
              title="Name can contain only alphanumeric characters, spaces, commas, hyphens, and apostrophes"
              type="text"
              value=""
            />
          </label>
        </fieldset>
        <fieldset
          class="_fieldset_31bf4a"
        >
          <label
            class="_label_31bf4a"
          >
            Description
            <input
              class="_input_31bf4a"
              name="description"
              placeholder="Description"
              value=""
            />
          </label>
        </fieldset>
        <button
          class="_submit_31bf4a"
          data-testid="gameFormSubmit"
          type="submit"
        >
          Create Game
        </button>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`GameForm > edit form matches snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="_root_31bf4a"
      >
        <h3
          class="_header_31bf4a"
        >
          Update Game
        </h3>
        <form
          data-testid="gameForm"
          style="--button-background-color: #00a323; --button-text-color: #fff; --button-hover-color: #00921f; --button-border-color: #00821c;"
        >
          <fieldset
            class="_fieldset_31bf4a"
          >
            <label
              class="_label_31bf4a"
            >
              Name
              <input
                class="_input_31bf4a"
                name="name"
                pattern="^\\s*[A-Za-z0-9 \\-',]*\\s*$"
                placeholder="Name"
                title="Name can contain only alphanumeric characters, spaces, commas, hyphens, and apostrophes"
                type="text"
                value="My Game 1"
              />
            </label>
          </fieldset>
          <fieldset
            class="_fieldset_31bf4a"
          >
            <label
              class="_label_31bf4a"
            >
              Description
              <input
                class="_input_31bf4a"
                name="description"
                placeholder="Description"
                value="This game has a description"
              />
            </label>
          </fieldset>
          <button
            class="_submit_31bf4a"
            data-testid="gameFormSubmit"
            type="submit"
          >
            Update Game
          </button>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="_root_31bf4a"
    >
      <h3
        class="_header_31bf4a"
      >
        Update Game
      </h3>
      <form
        data-testid="gameForm"
        style="--button-background-color: #00a323; --button-text-color: #fff; --button-hover-color: #00921f; --button-border-color: #00821c;"
      >
        <fieldset
          class="_fieldset_31bf4a"
        >
          <label
            class="_label_31bf4a"
          >
            Name
            <input
              class="_input_31bf4a"
              name="name"
              pattern="^\\s*[A-Za-z0-9 \\-',]*\\s*$"
              placeholder="Name"
              title="Name can contain only alphanumeric characters, spaces, commas, hyphens, and apostrophes"
              type="text"
              value="My Game 1"
            />
          </label>
        </fieldset>
        <fieldset
          class="_fieldset_31bf4a"
        >
          <label
            class="_label_31bf4a"
          >
            Description
            <input
              class="_input_31bf4a"
              name="description"
              placeholder="Description"
              value="This game has a description"
            />
          </label>
        </fieldset>
        <button
          class="_submit_31bf4a"
          data-testid="gameFormSubmit"
          type="submit"
        >
          Update Game
        </button>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
